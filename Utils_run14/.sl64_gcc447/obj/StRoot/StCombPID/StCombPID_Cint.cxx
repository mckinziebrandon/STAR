//
// File generated by rootcint at Mon Mar 23 10:04:50 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc447dIobjdIStRootdIStCombPIDdIStCombPID_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StCombPID_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StCombPID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StCombPID(void *p = 0);
   static void *newArray_StCombPID(Long_t size, void *p);
   static void delete_StCombPID(void *p);
   static void deleteArray_StCombPID(void *p);
   static void destruct_StCombPID(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StCombPID*)
   {
      ::StCombPID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StCombPID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StCombPID", ::StCombPID::Class_Version(), ".sl64_gcc447/obj/StRoot/StCombPID/StCombPID.h", 13,
                  typeid(::StCombPID), DefineBehavior(ptr, ptr),
                  &::StCombPID::Dictionary, isa_proxy, 4,
                  sizeof(::StCombPID) );
      instance.SetNew(&new_StCombPID);
      instance.SetNewArray(&newArray_StCombPID);
      instance.SetDelete(&delete_StCombPID);
      instance.SetDeleteArray(&deleteArray_StCombPID);
      instance.SetDestructor(&destruct_StCombPID);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StCombPID*)
   {
      return GenerateInitInstanceLocal((::StCombPID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StCombPID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StCombPID::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StCombPID::Class_Name()
{
   return "StCombPID";
}

//______________________________________________________________________________
const char *StCombPID::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StCombPID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StCombPID::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StCombPID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StCombPID::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StCombPID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StCombPID::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StCombPID*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StCombPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class StCombPID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StCombPID::Class(),this);
   } else {
      R__b.WriteClassBuffer(StCombPID::Class(),this);
   }
}

//______________________________________________________________________________
void StCombPID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StCombPID.
      TClass *R__cl = ::StCombPID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mP_t", &mP_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigma_pi", &mNSigma_pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM2", &mM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRotAngle", &mRotAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScaleFactor", &mScaleFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNewX", &mNewX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNewY", &mNewY);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StCombPID(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StCombPID : new ::StCombPID;
   }
   static void *newArray_StCombPID(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StCombPID[nElements] : new ::StCombPID[nElements];
   }
   // Wrapper around operator delete
   static void delete_StCombPID(void *p) {
      delete ((::StCombPID*)p);
   }
   static void deleteArray_StCombPID(void *p) {
      delete [] ((::StCombPID*)p);
   }
   static void destruct_StCombPID(void *p) {
      typedef ::StCombPID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StCombPID

/********************************************************
* .sl64_gcc447/obj/StRoot/StCombPID/StCombPID_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStCombPID_Cint();

extern "C" void G__set_cpp_environmentStCombPID_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StCombPID.h");
  G__cpp_reset_tagtableStCombPID_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStCombPID_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StCombPID */
static int G__StCombPID_Cint_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StCombPID* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StCombPID[n];
     } else {
       p = new((void*) gvp) StCombPID[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StCombPID;
     } else {
       p = new((void*) gvp) StCombPID;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StCombPID*) G__getstructoffset())->setInitValues((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StCombPID*) G__getstructoffset())->getNewX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StCombPID*) G__getstructoffset())->getNewY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StCombPID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StCombPID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StCombPID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StCombPID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StCombPID*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StCombPID*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StCombPID*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StCombPID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StCombPID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StCombPID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StCombPID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StCombPID_Cint_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StCombPID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StCombPID_Cint_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StCombPID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StCombPID(*(StCombPID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StCombPID G__TStCombPID;
static int G__StCombPID_Cint_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StCombPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StCombPID*) (soff+(sizeof(StCombPID)*i)))->~G__TStCombPID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StCombPID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StCombPID*) (soff))->~G__TStCombPID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StCombPID_Cint_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StCombPID* dest = (StCombPID*) G__getstructoffset();
   *dest = *(StCombPID*) libp->para[0].ref;
   const StCombPID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StCombPID */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStCombPID_Cint {
 public:
  G__Sizep2memfuncStCombPID_Cint(): p(&G__Sizep2memfuncStCombPID_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStCombPID_Cint::*p)();
};

size_t G__get_sizep2memfuncStCombPID_Cint()
{
  G__Sizep2memfuncStCombPID_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStCombPID_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStCombPID_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StCombPID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StCombPID */
static void G__setup_memvarStCombPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID));
   { StCombPID *p; p=(StCombPID*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mP_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mNSigma_pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mM2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mRotAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mScaleFactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mNewX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mNewY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StCombPID_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStCombPID_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStCombPID(void) {
   /* StCombPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID));
   G__memfunc_setup("StCombPID",805,G__StCombPID_Cint_168_0_1, 105, G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitValues",1360,G__StCombPID_Cint_168_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 10 - P_t d - 'Double_t' 10 - NSigma_pi "
"d - 'Double_t' 10 - M2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNewX",706,G__StCombPID_Cint_168_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNewY",707,G__StCombPID_Cint_168_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeanNSigma",1280,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - PID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidthM2",959,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - PID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScaleFactor",1415,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRotAngle",1116,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "d - 'Double_t' 0 - ScaleFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcNewXY",878,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StCombPID_Cint_168_0_10, 85, G__get_linked_tagnum(&G__StCombPID_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StCombPID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StCombPID_Cint_168_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StCombPID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StCombPID_Cint_168_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StCombPID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StCombPID_Cint_168_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StCombPID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StCombPID_Cint_168_0_14, 85, G__get_linked_tagnum(&G__StCombPID_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StCombPID_Cint_168_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StCombPID_Cint_168_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StCombPID_Cint_168_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StCombPID_Cint_168_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StCombPID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StCombPID_Cint_168_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StCombPID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StCombPID_Cint_168_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StCombPID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StCombPID_Cint_168_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StCombPID::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StCombPID", 805, G__StCombPID_Cint_168_0_22, (int) ('i'), G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID), -1, 0, 1, 1, 1, 0, "u 'StCombPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StCombPID", 931, G__StCombPID_Cint_168_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StCombPID_Cint_168_0_24, (int) ('u'), G__get_linked_tagnum(&G__StCombPID_CintLN_StCombPID), -1, 1, 1, 1, 1, 0, "u 'StCombPID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStCombPID_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStCombPID_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStCombPID_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StCombPID_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StCombPID_CintLN_StCombPID = { "StCombPID" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStCombPID_Cint() {
  G__StCombPID_CintLN_TClass.tagnum = -1 ;
  G__StCombPID_CintLN_TBuffer.tagnum = -1 ;
  G__StCombPID_CintLN_TMemberInspector.tagnum = -1 ;
  G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StCombPID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StCombPID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StCombPID_CintLN_StCombPID.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStCombPID_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StCombPID_CintLN_StCombPID),sizeof(StCombPID),-1,263424,(char*)NULL,G__setup_memvarStCombPID,G__setup_memfuncStCombPID);
}
extern "C" void G__cpp_setupStCombPID_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStCombPID_Cint()");
  G__set_cpp_environmentStCombPID_Cint();
  G__cpp_setup_tagtableStCombPID_Cint();

  G__cpp_setup_inheritanceStCombPID_Cint();

  G__cpp_setup_typetableStCombPID_Cint();

  G__cpp_setup_memvarStCombPID_Cint();

  G__cpp_setup_memfuncStCombPID_Cint();
  G__cpp_setup_globalStCombPID_Cint();
  G__cpp_setup_funcStCombPID_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStCombPID_Cint();
  return;
}
class G__cpp_setup_initStCombPID_Cint {
  public:
    G__cpp_setup_initStCombPID_Cint() { G__add_setup_func("StCombPID_Cint",(G__incsetup)(&G__cpp_setupStCombPID_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStCombPID_Cint() { G__remove_setup_func("StCombPID_Cint"); }
};
G__cpp_setup_initStCombPID_Cint G__cpp_setup_initializerStCombPID_Cint;

