//
// File generated by rootcint at Fri Aug 28 15:47:05 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc447dIobjdIStRootdIMyEventEmbDatadIMyEventEmbData_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MyEventEmbData_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MyTrackEmbData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyTrackEmbData(void *p = 0);
   static void *newArray_MyTrackEmbData(Long_t size, void *p);
   static void delete_MyTrackEmbData(void *p);
   static void deleteArray_MyTrackEmbData(void *p);
   static void destruct_MyTrackEmbData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MyTrackEmbData*)
   {
      ::MyTrackEmbData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyTrackEmbData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyTrackEmbData", ::MyTrackEmbData::Class_Version(), ".sl64_gcc447/obj/StRoot/MyEventEmbData/MyEventEmbData.h", 12,
                  typeid(::MyTrackEmbData), DefineBehavior(ptr, ptr),
                  &::MyTrackEmbData::Dictionary, isa_proxy, 4,
                  sizeof(::MyTrackEmbData) );
      instance.SetNew(&new_MyTrackEmbData);
      instance.SetNewArray(&newArray_MyTrackEmbData);
      instance.SetDelete(&delete_MyTrackEmbData);
      instance.SetDeleteArray(&deleteArray_MyTrackEmbData);
      instance.SetDestructor(&destruct_MyTrackEmbData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MyTrackEmbData*)
   {
      return GenerateInitInstanceLocal((::MyTrackEmbData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyTrackEmbData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MyEventEmbData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyEventEmbData(void *p = 0);
   static void *newArray_MyEventEmbData(Long_t size, void *p);
   static void delete_MyEventEmbData(void *p);
   static void deleteArray_MyEventEmbData(void *p);
   static void destruct_MyEventEmbData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MyEventEmbData*)
   {
      ::MyEventEmbData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyEventEmbData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyEventEmbData", ::MyEventEmbData::Class_Version(), ".sl64_gcc447/obj/StRoot/MyEventEmbData/MyEventEmbData.h", 73,
                  typeid(::MyEventEmbData), DefineBehavior(ptr, ptr),
                  &::MyEventEmbData::Dictionary, isa_proxy, 4,
                  sizeof(::MyEventEmbData) );
      instance.SetNew(&new_MyEventEmbData);
      instance.SetNewArray(&newArray_MyEventEmbData);
      instance.SetDelete(&delete_MyEventEmbData);
      instance.SetDeleteArray(&deleteArray_MyEventEmbData);
      instance.SetDestructor(&destruct_MyEventEmbData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MyEventEmbData*)
   {
      return GenerateInitInstanceLocal((::MyEventEmbData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyEventEmbData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MyTrackEmbData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MyTrackEmbData::Class_Name()
{
   return "MyTrackEmbData";
}

//______________________________________________________________________________
const char *MyTrackEmbData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MyTrackEmbData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyTrackEmbData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MyTrackEmbData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyTrackEmbData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MyTrackEmbData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyTrackEmbData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MyTrackEmbData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MyEventEmbData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MyEventEmbData::Class_Name()
{
   return "MyEventEmbData";
}

//______________________________________________________________________________
const char *MyEventEmbData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MyEventEmbData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyEventEmbData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MyEventEmbData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyEventEmbData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MyEventEmbData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyEventEmbData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MyEventEmbData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MyTrackEmbData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyTrackEmbData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyTrackEmbData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyTrackEmbData::Class(),this);
   }
}

//______________________________________________________________________________
void MyTrackEmbData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyTrackEmbData.
      TClass *R__cl = ::MyTrackEmbData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass2", &Mass2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSigmaEl", &nSigmaEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Momentum", &Momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beta", &Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dca", &dca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPCdEdx", &TPCdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitsPoss", &nHitsPoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitsFit", &nHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitsdEdx", &nHitsdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yLocal", &yLocal);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MyTrackEmbData(void *p) {
      return  p ? new(p) ::MyTrackEmbData : new ::MyTrackEmbData;
   }
   static void *newArray_MyTrackEmbData(Long_t nElements, void *p) {
      return p ? new(p) ::MyTrackEmbData[nElements] : new ::MyTrackEmbData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyTrackEmbData(void *p) {
      delete ((::MyTrackEmbData*)p);
   }
   static void deleteArray_MyTrackEmbData(void *p) {
      delete [] ((::MyTrackEmbData*)p);
   }
   static void destruct_MyTrackEmbData(void *p) {
      typedef ::MyTrackEmbData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MyTrackEmbData

//______________________________________________________________________________
void MyEventEmbData::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyEventEmbData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyEventEmbData::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyEventEmbData::Class(),this);
   }
}

//______________________________________________________________________________
void MyEventEmbData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyEventEmbData.
      TClass *R__cl = ::MyEventEmbData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refMult", &refMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunId", &RunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NrElectrons", &NrElectrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NrPions", &NrPions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NrKaons", &NrKaons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NrProtons", &NrProtons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Prim_X", &Prim_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Prim_Y", &Prim_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Prim_Z", &Prim_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ElectronTracks", &ElectronTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PionTracks", &PionTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*KaonTracks", &KaonTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ProtonTracks", &ProtonTracks);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MyEventEmbData(void *p) {
      return  p ? new(p) ::MyEventEmbData : new ::MyEventEmbData;
   }
   static void *newArray_MyEventEmbData(Long_t nElements, void *p) {
      return p ? new(p) ::MyEventEmbData[nElements] : new ::MyEventEmbData[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyEventEmbData(void *p) {
      delete ((::MyEventEmbData*)p);
   }
   static void deleteArray_MyEventEmbData(void *p) {
      delete [] ((::MyEventEmbData*)p);
   }
   static void destruct_MyEventEmbData(void *p) {
      typedef ::MyEventEmbData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MyEventEmbData

/********************************************************
* .sl64_gcc447/obj/StRoot/MyEventEmbData/MyEventEmbData_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMyEventEmbData_Cint();

extern "C" void G__set_cpp_environmentMyEventEmbData_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MyEventEmbData.h");
  G__cpp_reset_tagtableMyEventEmbData_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevMyEventEmbData_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MyTrackEmbData */
static int G__MyEventEmbData_Cint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyTrackEmbData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyTrackEmbData[n];
     } else {
       p = new((void*) gvp) MyTrackEmbData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyTrackEmbData;
     } else {
       p = new((void*) gvp) MyTrackEmbData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetM2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetnSigmaEl((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetMomentum((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetBeta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->Setdca((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->Setpt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetTPCdEdx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->Seteta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->Sety((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->Setphi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetnHitsPoss((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetnHitsFit((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetnHitsdEdx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->SetyLocal((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetM2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetnSigmaEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->Getdca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->Getpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetTPCdEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->Geteta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->Gety());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->Getphi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetnHitsPoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetnHitsFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetnHitsdEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyTrackEmbData*) G__getstructoffset())->GetyLocal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const MyTrackEmbData*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyTrackEmbData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrackEmbData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyTrackEmbData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyTrackEmbData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrackEmbData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrackEmbData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyTrackEmbData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrackEmbData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_191_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyTrackEmbData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MyEventEmbData_Cint_191_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyTrackEmbData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyTrackEmbData(*(MyTrackEmbData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyTrackEmbData G__TMyTrackEmbData;
static int G__MyEventEmbData_Cint_191_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyTrackEmbData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyTrackEmbData*) (soff+(sizeof(MyTrackEmbData)*i)))->~G__TMyTrackEmbData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyTrackEmbData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyTrackEmbData*) (soff))->~G__TMyTrackEmbData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MyEventEmbData_Cint_191_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyTrackEmbData* dest = (MyTrackEmbData*) G__getstructoffset();
   *dest = *(MyTrackEmbData*) libp->para[0].ref;
   const MyTrackEmbData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyEventEmbData */
static int G__MyEventEmbData_Cint_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyEventEmbData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyEventEmbData[n];
     } else {
       p = new((void*) gvp) MyEventEmbData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyEventEmbData;
     } else {
       p = new((void*) gvp) MyEventEmbData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->SetHeader((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->SetPrim_X((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->SetPrim_Y((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->SetPrim_Z((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MyEventEmbData*) G__getstructoffset())->AddElectronTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MyEventEmbData*) G__getstructoffset())->AddPionTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MyEventEmbData*) G__getstructoffset())->AddKaonTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MyEventEmbData*) G__getstructoffset())->AddProtonTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->clearTrackLists();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyEventEmbData*) G__getstructoffset())->GetRefMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyEventEmbData*) G__getstructoffset())->GetRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MyEventEmbData*) G__getstructoffset())->GetNrElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MyEventEmbData*) G__getstructoffset())->GetNrPions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MyEventEmbData*) G__getstructoffset())->GetNrKaons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MyEventEmbData*) G__getstructoffset())->GetNrProtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyEventEmbData*) G__getstructoffset())->GetPrim_X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyEventEmbData*) G__getstructoffset())->GetPrim_Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MyEventEmbData*) G__getstructoffset())->GetPrim_Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventEmbData*) G__getstructoffset())->GetElectronTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventEmbData*) G__getstructoffset())->GetPionTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventEmbData*) G__getstructoffset())->GetKaonTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventEmbData*) G__getstructoffset())->GetProtonTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyEventEmbData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventEmbData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyEventEmbData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyEventEmbData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventEmbData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventEmbData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyEventEmbData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventEmbData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyEventEmbData_Cint_192_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyEventEmbData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MyEventEmbData_Cint_192_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyEventEmbData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyEventEmbData(*(MyEventEmbData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyEventEmbData G__TMyEventEmbData;
static int G__MyEventEmbData_Cint_192_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyEventEmbData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyEventEmbData*) (soff+(sizeof(MyEventEmbData)*i)))->~G__TMyEventEmbData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyEventEmbData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyEventEmbData*) (soff))->~G__TMyEventEmbData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MyEventEmbData_Cint_192_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyEventEmbData* dest = (MyEventEmbData*) G__getstructoffset();
   *dest = *(MyEventEmbData*) libp->para[0].ref;
   const MyEventEmbData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MyTrackEmbData */

/* MyEventEmbData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMyEventEmbData_Cint {
 public:
  G__Sizep2memfuncMyEventEmbData_Cint(): p(&G__Sizep2memfuncMyEventEmbData_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMyEventEmbData_Cint::*p)();
};

size_t G__get_sizep2memfuncMyEventEmbData_Cint()
{
  G__Sizep2memfuncMyEventEmbData_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMyEventEmbData_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData))) {
     MyTrackEmbData *G__Lderived;
     G__Lderived=(MyTrackEmbData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData),G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData))) {
     MyEventEmbData *G__Lderived;
     G__Lderived=(MyEventEmbData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData),G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMyEventEmbData_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MyTrackEmbData */
static void G__setup_memvarMyTrackEmbData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData));
   { MyTrackEmbData *p; p=(MyTrackEmbData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mass2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"nSigmaEl=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dca=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"TPCdEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"nHitsPoss=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"nHitsFit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"nHitsdEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yLocal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyEventEmbData */
static void G__setup_memvarMyEventEmbData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData));
   { MyEventEmbData *p; p=(MyEventEmbData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"refMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RunId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"NrElectrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"NrPions=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"NrKaons=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"NrProtons=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Prim_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Prim_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Prim_Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray),-1,-1,4,"ElectronTracks=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray),-1,-1,4,"PionTracks=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray),-1,-1,4,"KaonTracks=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray),-1,-1,4,"ProtonTracks=",0,"->");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMyEventEmbData_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMyTrackEmbData(void) {
   /* MyTrackEmbData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData));
   G__memfunc_setup("MyTrackEmbData",1353,G__MyEventEmbData_Cint_191_0_1, 105, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM2",427,G__MyEventEmbData_Cint_191_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnSigmaEl",1084,G__MyEventEmbData_Cint_191_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__MyEventEmbData_Cint_191_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeta",680,G__MyEventEmbData_Cint_191_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setdca",596,G__MyEventEmbData_Cint_191_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setpt",528,G__MyEventEmbData_Cint_191_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTPCdEdx",920,G__MyEventEmbData_Cint_191_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Seteta",614,G__MyEventEmbData_Cint_191_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sety",421,G__MyEventEmbData_Cint_191_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setphi",621,G__MyEventEmbData_Cint_191_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnHitsPoss",1239,G__MyEventEmbData_Cint_191_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnHitsFit",1109,G__MyEventEmbData_Cint_191_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnHitsdEdx",1207,G__MyEventEmbData_Cint_191_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetyLocal",912,G__MyEventEmbData_Cint_191_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM2",415,G__MyEventEmbData_Cint_191_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnSigmaEl",1072,G__MyEventEmbData_Cint_191_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__MyEventEmbData_Cint_191_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__MyEventEmbData_Cint_191_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdca",584,G__MyEventEmbData_Cint_191_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getpt",516,G__MyEventEmbData_Cint_191_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTPCdEdx",908,G__MyEventEmbData_Cint_191_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Geteta",602,G__MyEventEmbData_Cint_191_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gety",409,G__MyEventEmbData_Cint_191_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getphi",609,G__MyEventEmbData_Cint_191_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnHitsPoss",1227,G__MyEventEmbData_Cint_191_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnHitsFit",1097,G__MyEventEmbData_Cint_191_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnHitsdEdx",1195,G__MyEventEmbData_Cint_191_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetyLocal",900,G__MyEventEmbData_Cint_191_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__MyEventEmbData_Cint_191_0_30, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MyEventEmbData_Cint_191_0_31, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyTrackEmbData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MyEventEmbData_Cint_191_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrackEmbData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MyEventEmbData_Cint_191_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyTrackEmbData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MyEventEmbData_Cint_191_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyTrackEmbData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MyEventEmbData_Cint_191_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MyEventEmbData_Cint_191_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrackEmbData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MyEventEmbData_Cint_191_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyTrackEmbData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MyEventEmbData_Cint_191_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrackEmbData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MyEventEmbData_Cint_191_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyTrackEmbData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyTrackEmbData", 1353, G__MyEventEmbData_Cint_191_0_43, (int) ('i'), G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 1, 1, 1, 0, "u 'MyTrackEmbData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyTrackEmbData", 1479, G__MyEventEmbData_Cint_191_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MyEventEmbData_Cint_191_0_45, (int) ('u'), G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 1, 1, 1, 1, 0, "u 'MyTrackEmbData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyEventEmbData(void) {
   /* MyEventEmbData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData));
   G__memfunc_setup("MyEventEmbData",1366,G__MyEventEmbData_Cint_192_0_1, 105, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__MyEventEmbData_Cint_192_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - rm f - 'Float_t' 0 - ri", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrim_X",891,G__MyEventEmbData_Cint_192_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - px", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrim_Y",892,G__MyEventEmbData_Cint_192_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrim_Z",893,G__MyEventEmbData_Cint_192_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddElectronTrack",1594,G__MyEventEmbData_Cint_192_0_6, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPionTrack",1172,G__MyEventEmbData_Cint_192_0_7, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddKaonTrack",1159,G__MyEventEmbData_Cint_192_0_8, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProtonTrack",1408,G__MyEventEmbData_Cint_192_0_9, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyTrackEmbData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearTrackLists",1547,G__MyEventEmbData_Cint_192_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefMult",991,G__MyEventEmbData_Cint_192_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunId",770,G__MyEventEmbData_Cint_192_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrElectrons",1423,G__MyEventEmbData_Cint_192_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrPions",1001,G__MyEventEmbData_Cint_192_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrKaons",988,G__MyEventEmbData_Cint_192_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrProtons",1237,G__MyEventEmbData_Cint_192_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrim_X",879,G__MyEventEmbData_Cint_192_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrim_Y",880,G__MyEventEmbData_Cint_192_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrim_Z",881,G__MyEventEmbData_Cint_192_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElectronTracks",1732,G__MyEventEmbData_Cint_192_0_20, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPionTracks",1310,G__MyEventEmbData_Cint_192_0_21, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKaonTracks",1297,G__MyEventEmbData_Cint_192_0_22, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtonTracks",1546,G__MyEventEmbData_Cint_192_0_23, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MyEventEmbData_Cint_192_0_24, 85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyEventEmbData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MyEventEmbData_Cint_192_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventEmbData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MyEventEmbData_Cint_192_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyEventEmbData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MyEventEmbData_Cint_192_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyEventEmbData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MyEventEmbData_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MyEventEmbData_Cint_192_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MyEventEmbData_Cint_192_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventEmbData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MyEventEmbData_Cint_192_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyEventEmbData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MyEventEmbData_Cint_192_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventEmbData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MyEventEmbData_Cint_192_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyEventEmbData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyEventEmbData", 1366, G__MyEventEmbData_Cint_192_0_36, (int) ('i'), G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData), -1, 0, 1, 1, 1, 0, "u 'MyEventEmbData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyEventEmbData", 1492, G__MyEventEmbData_Cint_192_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MyEventEmbData_Cint_192_0_38, (int) ('u'), G__get_linked_tagnum(&G__MyEventEmbData_CintLN_MyEventEmbData), -1, 1, 1, 1, 1, 0, "u 'MyEventEmbData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMyEventEmbData_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMyEventEmbData_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMyEventEmbData_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MyEventEmbData_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_MyTrackEmbData = { "MyTrackEmbData" , 99 , -1 };
G__linked_taginfo G__MyEventEmbData_CintLN_MyEventEmbData = { "MyEventEmbData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMyEventEmbData_Cint() {
  G__MyEventEmbData_CintLN_TClass.tagnum = -1 ;
  G__MyEventEmbData_CintLN_TBuffer.tagnum = -1 ;
  G__MyEventEmbData_CintLN_TMemberInspector.tagnum = -1 ;
  G__MyEventEmbData_CintLN_TObject.tagnum = -1 ;
  G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyEventEmbData_CintLN_TClonesArray.tagnum = -1 ;
  G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MyEventEmbData_CintLN_MyTrackEmbData.tagnum = -1 ;
  G__MyEventEmbData_CintLN_MyEventEmbData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMyEventEmbData_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_MyTrackEmbData),sizeof(MyTrackEmbData),-1,292096,(char*)NULL,G__setup_memvarMyTrackEmbData,G__setup_memfuncMyTrackEmbData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MyEventEmbData_CintLN_MyEventEmbData),sizeof(MyEventEmbData),-1,292096,(char*)NULL,G__setup_memvarMyEventEmbData,G__setup_memfuncMyEventEmbData);
}
extern "C" void G__cpp_setupMyEventEmbData_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMyEventEmbData_Cint()");
  G__set_cpp_environmentMyEventEmbData_Cint();
  G__cpp_setup_tagtableMyEventEmbData_Cint();

  G__cpp_setup_inheritanceMyEventEmbData_Cint();

  G__cpp_setup_typetableMyEventEmbData_Cint();

  G__cpp_setup_memvarMyEventEmbData_Cint();

  G__cpp_setup_memfuncMyEventEmbData_Cint();
  G__cpp_setup_globalMyEventEmbData_Cint();
  G__cpp_setup_funcMyEventEmbData_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMyEventEmbData_Cint();
  return;
}
class G__cpp_setup_initMyEventEmbData_Cint {
  public:
    G__cpp_setup_initMyEventEmbData_Cint() { G__add_setup_func("MyEventEmbData_Cint",(G__incsetup)(&G__cpp_setupMyEventEmbData_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMyEventEmbData_Cint() { G__remove_setup_func("MyEventEmbData_Cint"); }
};
G__cpp_setup_initMyEventEmbData_Cint G__cpp_setup_initializerMyEventEmbData_Cint;

